First name: Yikai
Last name: Feng 
NetID: yf730


==========================================================================================================
Files list:

/README: reports on my submission
/Makefile: file containing all of your compiler directives
/makefile.ini: initial makefile example for running stack_array

/bin
    /fifo_test: executable file compiled from fifo_test.c for fifo test
    /stack_test1: executable file compiled from stack_test.c for array test
    /stack_test2: executable file compiled from stack_test.c for list test

/include
    /fifo.h: contain function declarations and macro definitions to be shared for Question 6
    /list.h: contain function declarations and macro definitions to be shared for Question 5
    /stack.h: contain function declarations and macro definitions to be shared for Question 5, 6

/lib
    /libstack1.a: generate libstack.a for Question 2
    /libstack2.a: generate libstack.a for Question 5
    /libfifo.a: generate libfifo.a for Question 6

/obj
    /fifo_list.o: object file compiled from fifo_list.c
    /fifo_test.o: object file compiled from fifo_test.c
    /list_impl.o: object file compiled from list_impl.c
    /stack_array.o: object file compiled from stack_array.c
    /stack_list.o: object file compiled from stack_list.c
    /stack_test.o: object file compiled from stack_test.c

/src
    /fifo_list.c: implement list version of fifo for Question 6
    /fifo_test.c: initially implement fifo test
    /list_impl.c: implement the doubly linked list function for Question 4
    /stack_array.c: initially implement array version of stack
    /stack_list.c: implement list version of stack for Question 5
    /stack_test.c: initially implement stack test


==========================================================================================================
Compilation rules:
(Detailed information of all compiled files are included in the file explanation above.)

Question 2:
${OBJ}/stack_array.o
${OBJ}/stack_test.o 
${LIB}/libstack1.a 
${BIN}/stack_test1 
runarray

Question 5:
${OBJ}/list_impl.o
${OBJ}/stack_list.o
${LIB}/libstack2.a
${BIN}/stack_test2
runlist

Question 6:
${OBJ}/fifo_list.o
${OBJ}/fifo_test.o
${LIB}/libfifo.a
${BIN}/fifo_test
runfifo


==========================================================================================================
Texual Answer:

Question 7
Traversing the entire list to determine the number of items is too expensive. 
What changes should you make, and in which file(s), to determine the size of the list in O(1)?

To add a variable (ex. num) that counts during each operation can lead to a O(1).
In list.h, add an attribute "num" in the list_type.
In list_impl.c, add "l->num = 0;" in the init_list(struct list_type *l).
In list_impl.c, add "l->num ++;" in the insert_head(struct list_type *l, void* element).
In list_impl.c, add "l->num --;" in the extract_head(struct list_type *l).
In list_impl.c, add "l->num --;" in the extract_tail(struct list_type *l).